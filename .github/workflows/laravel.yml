name: Laravel Deployment

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: 🏗️ Build, Test & Package
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: dccpadmin
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, dom, fileinfo, pgsql, zip, gd, intl, redis, imagick
          coverage: xdebug
          tools: composer:v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Copy .env for testing
        run: cp .env.example .env

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies (with dev)
        run: composer install --prefer-dist --no-progress

      - name: Generate Key
        run: php artisan key:generate

      - name: Install NPM dependencies
        run: npm ci

      - name: Build assets for production
        run: npm run build

      - name: Install Composer dependencies (production)
        run: composer install --no-dev --prefer-dist --no-progress

      - name: Create release archive
        run: |
          mkdir release
          rsync -av . release/ \
            --exclude .git \
            --exclude .github \
            --exclude node_modules \
            --exclude tests \
            --exclude '*.log' \
            --exclude '.env' \
            --exclude 'storage/logs/*.log' \
            --exclude 'bootstrap/cache/*.php' \
            --exclude 'release' \
            --exclude 'release.tar.gz' \
            --exclude '.editorconfig' \
            --exclude 'phpunit.xml' \
            --exclude 'pint.json' \
            --exclude 'rector.php'
          cd release
          tar -czf ../release.tar.gz .

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: release.tar.gz

  deploy:
    name: 🚀 Deploy to Production
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Download release artifact
        uses: actions/download-artifact@v4
        with:
          name: release

      - name: Upload release archive
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "release.tar.gz"
          target: "/home/deployer/laravel"

      - name: Deploy and restart services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/deployer/laravel
            /home/deployer/deploy.sh
            sudo systemctl restart nginx
            sudo systemctl restart php-fpm
